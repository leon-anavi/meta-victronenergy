From b3636ff37f534e70ea6478136cda78c425257667 Mon Sep 17 00:00:00 2001
From: Jeroen Hofstee <jhofstee@victronenergy.com>
Date: Fri, 16 May 2025 10:54:14 +0200
Subject: [PATCH] disable erroring on legacy ciphers

Upstream-Status: Inappropriate [Venus OS specific]
---
 src/rust/src/lib.rs | 17 ++---------------
 1 file changed, 2 insertions(+), 15 deletions(-)

diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs
index 9308e0c..01244c6 100644
--- a/src/rust/src/lib.rs
+++ b/src/rust/src/lib.rs
@@ -39,21 +39,8 @@ fn is_fips_enabled() -> bool {
 
 #[cfg(CRYPTOGRAPHY_OPENSSL_300_OR_GREATER)]
 fn _initialize_providers() -> CryptographyResult<LoadedProviders> {
-    // As of OpenSSL 3.0.0 we must register a legacy cipher provider
-    // to get RC2 (needed for junk asymmetric private key
-    // serialization), RC4, Blowfish, IDEA, SEED, etc. These things
-    // are ugly legacy, but we aren't going to get rid of them
-    // any time soon.
-    let load_legacy = env::var("CRYPTOGRAPHY_OPENSSL_NO_LEGACY")
-        .map(|v| v.is_empty() || v == "0")
-        .unwrap_or(true);
-    let legacy = if load_legacy {
-        let legacy_result = provider::Provider::load(None, "legacy");
-        _legacy_provider_error(legacy_result.is_ok())?;
-        Some(legacy_result?)
-    } else {
-        None
-    };
+    // legacy cipher are not supported on Venus OS
+    let legacy = None;
     let _default = provider::Provider::load(None, "default")?;
     Ok(LoadedProviders { legacy, _default })
 }
-- 
2.43.0

