From a29fdb05073626b8965b20cc47440395b26c555e Mon Sep 17 00:00:00 2001
From: Thiemo van Engelen <tvanengelen@victronenergy.com>
Date: Thu, 26 Jun 2025 14:04:22 +0200
Subject: [PATCH] Mask the AP password

Just like the BLE pincode, the AP password is now also masked. The mask
has been changed from replacing every character with a * to just
returning "******". This ways, there is no hint in how long the password
is.
---
 src/types.cpp     | 7 ++++++-
 src/types.h       | 1 +
 src/vevariant.cpp | 4 +---
 3 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/types.cpp b/src/types.cpp
index 6c8886c..c4646df 100644
--- a/src/types.cpp
+++ b/src/types.cpp
@@ -298,7 +298,7 @@ std::string Item::as_json()
     if (!cache_json.v.empty())
         return cache_json.v;
 
-    const bool mask = is_pincode();
+    const bool mask = is_pincode() || is_ap_password();
     nlohmann::json j { {"value", value.value.as_json_value(mask)} };
 
     if (value.min)
@@ -396,6 +396,11 @@ bool Item::should_be_retained() const
     return short_service_name.service_type == "system" && path.get() == "/Serial";
 }
 
+bool Item::is_ap_password() const
+{
+    return short_service_name.service_type == "settings" && path.get() == "/Settings/Services/AccessPointPassword";
+}
+
 bool Item::is_pincode() const
 {
     return short_service_name.service_type == "settings" && path.get() == "/Settings/Ble/Service/Pincode";
diff --git a/src/types.h b/src/types.h
index ad5a0c8..2775012 100644
--- a/src/types.h
+++ b/src/types.h
@@ -64,6 +64,7 @@ class Item
     const std::string &get_path() const;
     const std::string &get_service_name() const;
     bool should_be_retained() const;
+    bool is_ap_password() const;
     bool is_pincode() const;
     bool is_vrm_portal_mode() const;
 };
diff --git a/src/vevariant.cpp b/src/vevariant.cpp
index 04e8240..a998de9 100644
--- a/src/vevariant.cpp
+++ b/src/vevariant.cpp
@@ -381,9 +381,7 @@ nlohmann::json VeVariant::as_json_value(bool mask) const
     {
         if (mask)
         {
-            std::string val = str;
-            std::transform(val.begin(), val.end(), val.begin(), [](char c) {return '*';});
-            return val;
+            return "******";
         }
         return str;
     }
